/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package qlksk57.Form;

import static qlksk57.MyConnection.getConnection;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.sql.Connection;
import java.sql.Statement;
import java.util.ArrayList;

import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.WindowConstants;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

import org.apache.commons.lang3.StringUtils;

import qlksk57.control.UserControl;
import qlksk57.models.User;

/**
 *
 * @author khoa
 */

@SuppressWarnings("serial")
public class quanlytaikhoanform extends JFrame {

	UserControl userControl = new UserControl();
	
	/**
	 * Creates new form dichvuform
	 */
	public quanlytaikhoanform() {
		setResizable(false);
		initComponents();
		getConnection();
		hienThiDanhSachUser();
		setLocationDefault(900, 500);
	}

	Connection con = null;
	Statement st = null;


	public void hienThiDanhSachUser() {
		String colTieuDe1[] = new String[] { "Tên tài khoản", "Mật Khẩu", "Quyền" };
		ArrayList<User> dsdv = userControl.layDanhSachUser();

		DefaultTableModel model = new DefaultTableModel(colTieuDe1, 0);

		Object[] row;

		for (int i = 0; i < dsdv.size(); i++) {

			row = new Object[3];

			row[0] = dsdv.get(i).getUserName();
			row[1] = dsdv.get(i).getPassword();
			row[2] = dsdv.get(i).getRole() == 0 ? "Admin" : "Bình thường";

			model.addRow(row);
		}

		// }catch(ArrayIndexOutOfBoundsException ex){

		jTableDichvu.setModel(model);

		setEmptyAll();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	@SuppressWarnings({ "unchecked", "rawtypes" })
	private void initComponents() {

		jPanel7 = new JPanel();
		jPanel14 = new JPanel();
		jLabel18 = new JLabel();
		jPanel15 = new JPanel();
		jLabel19 = new JLabel();
		jLabel20 = new JLabel();
		jLabel21 = new JLabel();
		jTextFieldUSERNAME = new JTextField();
		them2 = new JButton();
		sua2 = new JButton();
		xoa2 = new JButton();
		thoat2 = new JButton();
		jButtonclear1 = new JButton();
		jScrollPane3 = new JScrollPane();
		jTableDichvu = new JTable();

		setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

		jPanel7.setBackground(new java.awt.Color(0, 204, 255));

		jLabel18.setBackground(new java.awt.Color(0, 0, 255));
		jLabel18.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
		jLabel18.setText("DANH SÁCH TÀI KHOẢN");

		GroupLayout jPanel14Layout = new GroupLayout(jPanel14);
		jPanel14Layout.setHorizontalGroup(
			jPanel14Layout.createParallelGroup(Alignment.TRAILING)
				.addGroup(Alignment.LEADING, jPanel14Layout.createSequentialGroup()
					.addGap(28)
					.addComponent(jLabel18, GroupLayout.PREFERRED_SIZE, 268, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(28, Short.MAX_VALUE))
		);
		jPanel14Layout.setVerticalGroup(
			jPanel14Layout.createParallelGroup(Alignment.LEADING)
				.addGroup(jPanel14Layout.createSequentialGroup()
					.addContainerGap()
					.addComponent(jLabel18, GroupLayout.PREFERRED_SIZE, 51, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		jPanel14.setLayout(jPanel14Layout);

		jPanel15.setBorder(BorderFactory.createTitledBorder("Thông tin người dùng"));

		jLabel19.setText("Tên tài khoản");

		jLabel20.setText("Mật khẩu");

		jLabel21.setText("Phần quyền");

		them2.setIcon(new ImageIcon(getClass().getResource("/qlksk57/Form/hinh/THEM.png"))); // NOI18N
		them2.setText("Thêm");
		them2.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent evt) {
				them2ActionPerformed(evt);
			}
		});

		sua2.setIcon(new ImageIcon(getClass().getResource("/qlksk57/Form/hinh/SUA.png"))); // NOI18N
		sua2.setText("Sửa");
		sua2.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent evt) {
				sua2ActionPerformed(evt);
			}
		});

		xoa2.setIcon(new ImageIcon(getClass().getResource("/qlksk57/Form/hinh/XOA.png"))); // NOI18N
		xoa2.setText("Xóa");
		xoa2.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent evt) {
				xoa2ActionPerformed(evt);
			}
		});

		thoat2.setIcon(new ImageIcon(getClass().getResource("/qlksk57/Form/hinh/THOAT.png"))); // NOI18N
		thoat2.setText("Thoát");
		thoat2.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent evt) {
				thoat2ActionPerformed(evt);
			}
		});

		jButtonclear1.setIcon(new ImageIcon(getClass().getResource("/qlksk57/Form/hinh/CLEAR.png"))); // NOI18N
		jButtonclear1.setText("Clear");
		jButtonclear1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent evt) {
				jButtonclear1ActionPerformed(evt);
			}
		});
		
		String phanquyen[] = { "Admin", "Bình thường" };
		comboBoxROLE = new JComboBox(phanquyen);
		
		passwordFieldPASSWORD = new JPasswordField();

		GroupLayout jPanel15Layout = new GroupLayout(jPanel15);
		jPanel15Layout.setHorizontalGroup(
			jPanel15Layout.createParallelGroup(Alignment.LEADING)
				.addGroup(jPanel15Layout.createSequentialGroup()
					.addGap(26)
					.addGroup(jPanel15Layout.createParallelGroup(Alignment.LEADING, false)
						.addGroup(jPanel15Layout.createParallelGroup(Alignment.TRAILING)
							.addComponent(jLabel21)
							.addComponent(jLabel20)
							.addComponent(jLabel19))
						.addComponent(them2, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addComponent(xoa2, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
					.addGroup(jPanel15Layout.createParallelGroup(Alignment.LEADING)
						.addGroup(jPanel15Layout.createSequentialGroup()
							.addGap(25)
							.addGroup(jPanel15Layout.createParallelGroup(Alignment.LEADING)
								.addComponent(jTextFieldUSERNAME, GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
								.addComponent(comboBoxROLE, 0, 160, Short.MAX_VALUE)
								.addComponent(passwordFieldPASSWORD, GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)))
						.addGroup(jPanel15Layout.createSequentialGroup()
							.addGap(18)
							.addGroup(jPanel15Layout.createParallelGroup(Alignment.LEADING)
								.addComponent(thoat2)
								.addGroup(jPanel15Layout.createSequentialGroup()
									.addComponent(sua2, GroupLayout.PREFERRED_SIZE, 72, GroupLayout.PREFERRED_SIZE)
									.addGap(18)
									.addComponent(jButtonclear1)))))
					.addGap(31))
		);
		jPanel15Layout.setVerticalGroup(
			jPanel15Layout.createParallelGroup(Alignment.LEADING)
				.addGroup(jPanel15Layout.createSequentialGroup()
					.addGap(21)
					.addGroup(jPanel15Layout.createParallelGroup(Alignment.BASELINE)
						.addComponent(jLabel19)
						.addComponent(jTextFieldUSERNAME, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
					.addGap(18)
					.addGroup(jPanel15Layout.createParallelGroup(Alignment.BASELINE)
						.addComponent(jLabel20)
						.addComponent(passwordFieldPASSWORD, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
					.addGap(23)
					.addGroup(jPanel15Layout.createParallelGroup(Alignment.BASELINE)
						.addComponent(jLabel21)
						.addComponent(comboBoxROLE, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
					.addGap(31)
					.addGroup(jPanel15Layout.createParallelGroup(Alignment.BASELINE)
						.addComponent(them2)
						.addComponent(sua2)
						.addComponent(jButtonclear1))
					.addGap(18)
					.addGroup(jPanel15Layout.createParallelGroup(Alignment.BASELINE)
						.addComponent(xoa2)
						.addComponent(thoat2))
					.addContainerGap(43, Short.MAX_VALUE))
		);
		jPanel15.setLayout(jPanel15Layout);

		jTableDichvu
				.setModel(new DefaultTableModel(
						new Object[][] { { null, null, null, null }, { null, null, null, null },
								{ null, null, null, null }, { null, null, null, null } },
						new String[] { "Title 1", "Title 2", "Title 3", "Title 4" }));
		jTableDichvu.addMouseListener(new MouseAdapter() {
			public void mouseClicked(MouseEvent evt) {
				jTableDichvuMouseClicked(evt);
			}
		});
		jScrollPane3.setViewportView(jTableDichvu);

		GroupLayout jPanel7Layout = new GroupLayout(jPanel7);
		jPanel7Layout.setHorizontalGroup(
			jPanel7Layout.createParallelGroup(Alignment.LEADING)
				.addGroup(jPanel7Layout.createSequentialGroup()
					.addGroup(jPanel7Layout.createParallelGroup(Alignment.LEADING)
						.addGroup(jPanel7Layout.createSequentialGroup()
							.addGap(46)
							.addComponent(jPanel15, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
							.addPreferredGap(ComponentPlacement.UNRELATED)
							.addComponent(jScrollPane3, GroupLayout.PREFERRED_SIZE, 421, GroupLayout.PREFERRED_SIZE))
						.addGroup(jPanel7Layout.createSequentialGroup()
							.addGap(255)
							.addComponent(jPanel14, GroupLayout.PREFERRED_SIZE, 324, GroupLayout.PREFERRED_SIZE)))
					.addContainerGap(24, Short.MAX_VALUE))
		);
		jPanel7Layout.setVerticalGroup(
			jPanel7Layout.createParallelGroup(Alignment.LEADING)
				.addGroup(jPanel7Layout.createSequentialGroup()
					.addGap(6)
					.addComponent(jPanel14, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
					.addGap(11)
					.addGroup(jPanel7Layout.createParallelGroup(Alignment.LEADING, false)
						.addComponent(jScrollPane3, 0, 0, Short.MAX_VALUE)
						.addComponent(jPanel15, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		jPanel7.setLayout(jPanel7Layout);

		GroupLayout layout = new GroupLayout(getContentPane());
		layout.setHorizontalGroup(
			layout.createParallelGroup(Alignment.LEADING)
				.addComponent(jPanel7, GroupLayout.DEFAULT_SIZE, 854, Short.MAX_VALUE)
		);
		layout.setVerticalGroup(
			layout.createParallelGroup(Alignment.LEADING)
				.addComponent(jPanel7, GroupLayout.DEFAULT_SIZE, 402, Short.MAX_VALUE)
		);
		getContentPane().setLayout(layout);

		pack();
	}// </editor-fold>//GEN-END:initComponents


	private void them2ActionPerformed(ActionEvent evt) {// GEN-FIRST:event_them2ActionPerformed
		// Check data
		String userName = jTextFieldUSERNAME.getText();
		@SuppressWarnings("deprecation")
		String password = passwordFieldPASSWORD.getText();
		 

		if (StringUtils.isEmpty(userName) || StringUtils.isEmpty(password)) {
			JOptionPane.showMessageDialog(this, "Vui lòng nhập thông tin đầy đủ");
			return;
		}

		int role = comboBoxROLE.getSelectedIndex();
		password = md5(password);
		Connection con = getConnection();
		
		try {

			st = (Statement) con.createStatement();
			String query = "INSERT INTO users(USERNAME,PASSWORD, ROLE_ID) VALUES('" + userName + "'," + "'"
					+ password + "', " + role + ")";

			st.execute(query);
			hienThiDanhSachUser();
			

		} catch (Exception ex) {
			System.out.println(ex.getMessage());
			JOptionPane.showMessageDialog(this, ex.getMessage());
//			ex.printStackTrace();
		}
	}// GEN-LAST:event_them2ActionPerformed

	@SuppressWarnings("deprecation")
	private void sua2ActionPerformed(ActionEvent evt) {// GEN-FIRST:event_sua2ActionPerformed
		
		if (jTableDichvu.getSelectedRow() == -1) {
			if (jTableDichvu.getRowCount() == 0) {
				// lblError.setText("Table is empty");
			} else {
				// lblError.setText("You must select a Tennis Player");
			}
		} else {
			DefaultTableModel model = (DefaultTableModel) jTableDichvu.getModel();
			model.setValueAt(jTextFieldUSERNAME.getText(), jTableDichvu.getSelectedRow(), 0);
			model.setValueAt(passwordFieldPASSWORD.getText().toString(), jTableDichvu.getSelectedRow(), 1);
//			model.setValueAt(jTextFieldGIADV.getText(), jTableDichvu.getSelectedRow(), 2);

			Connection con = getConnection();
			try {
				String userName = jTextFieldUSERNAME.getText();
				String password = passwordFieldPASSWORD.getText();

				int role = comboBoxROLE.getSelectedIndex();
				password = md5(password);

				if (StringUtils.isEmpty(userName) || StringUtils.isEmpty(password) ) {
					JOptionPane.showMessageDialog(this, "Vui lòng nhập thông tin đầy đủ");
					return;
				}
				
				st = (Statement) con.createStatement();
				String query = String.format("UPDATE users SET USERNAME ='%s', PASSWORD = '%s', ROLE_ID = %d WHERE USERNAME = '%s'",
						userName, password, role, userName);

				System.out.println("sql : " + query);

				st.execute(query);
				hienThiDanhSachUser();

			} catch (Exception ex) {

				System.out.println(ex.getMessage());
				JOptionPane.showMessageDialog(this, ex.getMessage());
//				ex.printStackTrace();
			}

		}

	}// GEN-LAST:event_sua2ActionPerformed

	private void xoa2ActionPerformed(ActionEvent evt) {// GEN-FIRST:event_xoa2ActionPerformed

		if(StringUtils.isEmpty(jTextFieldUSERNAME.getText())) {
			JOptionPane.showMessageDialog(this, "Vui lòng nhập mã dịch vụ để xóa");
			return;
		}
		
		Connection con = getConnection();
		try {
			st = (Statement) con.createStatement();
			String query = "DELETE FROM users WHERE USERNAME = '" + jTextFieldUSERNAME.getText() + "'";
			st.executeUpdate(query);
			hienThiDanhSachUser();

		} catch (Exception ex) {

			System.out.println(ex.getMessage());
			JOptionPane.showMessageDialog(this, ex.getMessage());
//			ex.printStackTrace();
		}
	}// GEN-LAST:event_xoa2ActionPerformed

	private void thoat2ActionPerformed(ActionEvent evt) {// GEN-FIRST:event_thoat2ActionPerformed
		// TODO add your handling code here:
		thoat2.setToolTipText("Click vào thoát chương trình ");
		int selected = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn thoát chương trình" + " trên không",
				"Thông báo", JOptionPane.YES_NO_CANCEL_OPTION);
		if (selected == JOptionPane.YES_NO_OPTION) {
			this.dispose();

		}

	}// GEN-LAST:event_thoat2ActionPerformed

	private void jButtonclear1ActionPerformed(ActionEvent evt) {// GEN-FIRST:event_jButtonclear1ActionPerformed
		setEmptyAll();
		jTextFieldUSERNAME.requestFocus();
	}// GEN-LAST:event_jButtonclear1ActionPerformed

	private void jTableDichvuMouseClicked(MouseEvent evt) {// GEN-FIRST:event_jTableDichvuMouseClicked
		int i = jTableDichvu.getSelectedRow();
		TableModel model = jTableDichvu.getModel();
		jTextFieldUSERNAME.setText(model.getValueAt(i, 0).toString());
		passwordFieldPASSWORD.setText(model.getValueAt(i, 1).toString());
		comboBoxROLE.setSelectedIndex(model.getValueAt(i, 2).toString().equals("Admin") ? 0 : 1);
	}// GEN-LAST:event_jTableDichvuMouseClicked

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
		// (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the default
		 * look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(quanlytaikhoanform.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(quanlytaikhoanform.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(quanlytaikhoanform.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		} catch (UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(quanlytaikhoanform.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		}
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new quanlytaikhoanform().setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private JButton jButtonclear1;
	private JLabel jLabel18;
	private JLabel jLabel19;
	private JLabel jLabel20;
	private JLabel jLabel21;
	private JPanel jPanel14;
	private JPanel jPanel15;
	private JPanel jPanel7;
	private JScrollPane jScrollPane3;
	private JTable jTableDichvu;
	private JTextField jTextFieldUSERNAME;
	private JButton sua2;
	private JButton them2;
	private JButton thoat2;
	private JButton xoa2;
	private JPasswordField passwordFieldPASSWORD;
	@SuppressWarnings("rawtypes")
	private JComboBox comboBoxROLE;
	// End of variables declaration//GEN-END:variables


	private void setLocationDefault(int w, int h) {
		Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();

		int x = (dim.width - w) / 2;
		int y = (dim.height - h) / 2;

		// Move the window
		 this.setLocation(x, y);
	}

	private void setEmptyAll() {
		jTextFieldUSERNAME.setText("");
		passwordFieldPASSWORD.setText("");
	}
	
	public static String md5(String str){
		String result = "";
		MessageDigest digest;
		try {
			digest = MessageDigest.getInstance("MD5");
			digest.update(str.getBytes());
			BigInteger bigInteger = new BigInteger(1,digest.digest());
			result = bigInteger.toString(16);
		} catch (NoSuchAlgorithmException e) {
			e.printStackTrace();
		}
		return result;
	}
}
